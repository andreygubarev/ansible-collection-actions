---
- name: Setup SSH server
  hosts: localhost
  connection: local
  gather_facts: true
  become: true
  tasks:
    - name: Set Usage
      ansible.builtin.set_fact:
        usage: |
          Usage: @andreygubarev/ssh [OPTIONS]&#13;&#10;

          Options:
            -i, --install             Install OpenSSH server
            -u, --user=andrey:andreygubarev (where andreygubarev is github username)
            -g, --group=group1
            --enable-sshguard         Enable SSHGuard
            --enable-hardening        Enable OpenSSH hardening
            --enable-tcp-forwarding   Enable TCP forwarding (requires --enable-hardening)
            --enable-root-login       Enable root login (requires --enable-hardening)

    - name: Print Usage
      when: help | default(false)
      failed_when: help | default(false)
      ansible.builtin.debug:
        msg: "{{ usage | safe }}"

    - name: Process aliases
      ansible.builtin.set_fact:
        install: "{{ install | default(i) | default(false) }}"
        user: "{{ user | default(u) | default('') }}"
        group: "{{ group | default(g) | default('') }}"

    - name: Process variables
      ansible.builtin.set_fact:
        # -i or --install
        ssh_openssh: "{{ install | default(false) }}"

        # --enable-sshguard
        ssh_sshguard: "{{ enable_sshguard | default(false) }}"

        # --enable-hardening
        ssh_hardening: "{{ enable_hardening | default(false) }}"

        # --enable-tcp-forwarding
        ssh_hardening_allow_tcp_forwarding: "{{ enable_tcp_forwarding | default(false) }}"

        # --enable-root-login
        ssh_hardening_allow_root_login: "{{ enable_root_login | default(false) }}"

        # -u or --user=andrey:andreygubarev (where andreygubarev is github username)
        ssh_users: >-
          {%- if user is string and user | length > 0 -%}
          {{ [dict(["name", "key"] | zip(user | split(':'))) | combine({"state": "allow"})] }}
          {%- else -%}
          {{ [] }}
          {%- endif -%}

        # -g or --group=group1
        ssh_groups: >-
          {%- if group is string and group | length > 0 -%}
          {{ [dict(["name"] | zip([group])) | combine({"state": "allow"})] }}
          {%- else -%}
          {{ [] }}
          {%- endif -%}

    - name: Include SSH role
      ansible.builtin.include_role:
        name: ssh
