---
- name: Ensure configuration directory
  ansible.builtin.file:
    path: "{{ k3s_path_confdir }}/config.yaml.d"
    state: directory
    mode: "0755"

- name: Ensure state directory
  ansible.builtin.file:
    path: "{{ k3s_path_statedir }}"
    state: directory
    owner: root
    group: root
    mode: 0644

- name: Assert configuration
  ansible.builtin.assert:
    that:
      - "k3s_token is defined"
      - "k3s_token is not none"
      - "k3s_token != ''"

- name: Create cluster config
  ansible.builtin.template:
    src: config.yml.j2
    dest: "{{ k3s_path_confdir }}/config.yaml"
    owner: root
    group: root
    mode: 0644
  register: k3s_state_config

- name: Create cluster registries config
  ansible.builtin.template:
    src: registries.yml.j2
    dest: "{{ k3s_path_confdir }}/registries.yaml"
    owner: root
    group: root
    mode: 0644

- name: Create systemd service environment
  ansible.builtin.template:
    src: k3s.service.env.j2
    dest: /etc/systemd/system/k3s.service.env
    owner: root
    group: root
    mode: 0644
  register: k3s_state_env

- name: Create systemd service
  ansible.builtin.template:
    src: kubernetes.service.j2
    dest: "/etc/systemd/system/k3s.service"
    owner: root
    group: root
    mode: 0644
  register: k3s_state_service

- name: Set systemd service state based on k3s_config
  ansible.builtin.set_fact:
    k3s_state: "{{ 'restarted' if k3s_state_config.changed or k3s_state_service.changed or k3s_state_env.changed or k3s_binary.changed else 'started' }}"
