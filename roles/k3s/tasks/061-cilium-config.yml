---
- name: Cilium | configuration
  when: k3s__cilium or k3s_upgrade
  block:
    - name: Cilium | add helm repository
      kubernetes.core.helm_repository:
        name: cilium
        repo_url: https://helm.cilium.io/

    - name: Cilium | get state
      ansible.builtin.shell: >
        KUBECONFIG={{ k3s_path_confdir }}/k3s.yaml
        kubectl -n kube-system get daemonset cilium
      register: cilium_installed
      changed_when: false
      ignore_errors: true

    - name: Cilium | set api server to remote
      when: cilium_installed.rc == 0
      ansible.builtin.set_fact:
        cilium_apiserver: "{{ k3s_apiserver }}"

    - name: Cilium | set api server to local
      when: cilium_installed.rc != 0
      ansible.builtin.set_fact:
        cilium_apiserver: "127.0.0.1"

    - name: Cilium | setup
      kubernetes.core.helm:
        kubeconfig: "{{ k3s_path_confdir }}/k3s.yaml"
        name: cilium
        chart_ref: cilium/cilium
        chart_version: "{{ k3s_version_cilium }}"
        release_namespace: kube-system
        wait: true
        values:
          image:
            useDigest: false
          operator:
            image:
              useDigest: false
            replicas: 1
          rollOutCiliumPods: true
          ipam:
            operator:
              clusterPoolIPv4PodCIDRList: "{{ k3s_pod_subnet }}"
          # example.com served using Cilium LoadBalancer from the k3s-server
          # example.com is not accessible from the k3s-agent when using tailscale
          # https://tailscale.com/kb/1236/kubernetes-operator#cilium-in-kube-proxy-replacement-mode
          # https://docs.cilium.io/en/stable/network/kubernetes/kubeproxy-free/#socket-loadbalancer-bypass-in-pod-namespace
          routingMode: native
          kubeProxyReplacement: true
          socketLB:
            hostNamespaceOnly: true
          loadBalancer:
            serviceTopology: true
          gatewayAPI:
            enabled: true
            hostNetwork: true
          nodeIPAM:
            enabled: true
          bpf:
            lbExternalClusterIP: true
          k8sServiceHost: "{{ cilium_apiserver }}"
          k8sServicePort: 6443

    - name: Cilium | wait for readiness
      ansible.builtin.shell: >
        KUBECONFIG={{ k3s_path_confdir }}/k3s.yaml
        kubectl -n kube-system wait --for=condition=ready pod -l app.kubernetes.io/part-of=cilium --timeout=300s
      changed_when: false
