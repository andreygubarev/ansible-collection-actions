---
- name: Assert supported OS
  ansible.builtin.assert:
    that:
      - ansible_distribution in ['Ubuntu', 'Debian']
      - ansible_distribution_release in ['focal', 'jammy', 'bullseye', 'bookworm']
    success_msg: "Supported OS detected: {{ ansible_distribution }} {{ ansible_distribution_release }}"
    fail_msg: "Unsupported OS detected: {{ ansible_distribution }} {{ ansible_distribution_release }}"

- name: APT cache update
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600

- name: Install APT dependencies
  ansible.builtin.apt:
    name:
      - ca-certificates
    state: present

- name: Set Tailscale Architecture based on Ansible facts
  set_fact:
    tailscale_arch: >-
      {% if ansible_architecture == 'x86_64' %}
      amd64
      {% elif ansible_architecture == 'aarch64' %}
      arm64
      {% else %}
      amd64
      {% endif %}

- name: Download Tailscale DEB package
  ansible.builtin.get_url:
    url: "{{ tailscale_download_url }}"
    dest: "/tmp/tailscale_{{ tailscale_version }}_amd64.deb"
    checksum: "{{ tailscale_download_checksum }}"
    mode: 0644

- name: Install Tailscale DEB package
  ansible.builtin.apt:
    deb: "/tmp/tailscale_{{ tailscale_version }}_{{ tailscale_arch }}.deb"
    state: present

- name: Tailscale configuration
  when: tailscale_enabled
  block:
    - name: Enable Tailscale service
      ansible.builtin.systemd:
        name: tailscaled
        enabled: true

    - name: Wait for Tailscale to be ready
      ansible.builtin.wait_for:
        path: "{{ tailscale_socket }}"
        state: present
        timeout: 60

    - name: Register Tailscale status
      ansible.builtin.command: >-
        tailscale
        --socket {{ tailscale_socket }}
        status --json
      register: tailscale_status
      changed_when: false

    - name: Register Tailscale node
      when: (tailscale_status.stdout | from_json)['BackendState'] == 'NeedsLogin'
      block:
        - name: Assert Tailscale auth key is defined
          ansible.builtin.assert:
            that:
              - tailscale_auth_key is defined
              - tailscale_auth_key != ""
            success_msg: "Tailscale auth key is defined"
            fail_msg: "Tailscale auth key is not defined"

        - name: Register Tailscale node
          ansible.builtin.command: >-
            tailscale
            --socket {{ tailscale_socket }}
            up
            --hostname {{ ansible_hostname }}
            {% if tailscale_login_server %}
            --login-server {{ tailscale_login_server }}
            {% endif %}
            --timeout {{ tailscale_login_timeout }}
            --auth-key {{ tailscale_auth_key }}
          changed_when: true
