---
- name: Assert configuration
  ansible.builtin.assert:
    that:
      - kubernetes_node_role is defined
      - kubernetes_node_role in ["server", "agent"]
      - kubernetes_cluster_name is defined
      - kubernetes_cluster_name != ""
      - kubernetes_cluster_apiserver is defined
      - kubernetes_cluster_apiserver != ""
      - kubernetes_cluster_token is defined
      - kubernetes_cluster_token != ""
      - kubernetes_cluster_bootstrap_enabled is defined
      - kubernetes_cluster_bootstrap_enabled and kubernetes_node_role == "server" or not kubernetes_cluster_bootstrap_enabled

- name: Assert architecture
  ansible.builtin.assert:
    that:
      - ansible_facts.architecture == "x86_64" or
        ansible_facts.architecture is search("aarch64") or
        ( ansible_facts.architecture is search("arm") and ansible_facts.userspace_bits == "64" )

- name: Assert tailscale
  when: kubernetes_network_tailscale_enabled
  block:
    - name: Check if tailscale is installed
      ansible.builtin.command:
        cmd: tailscale --version
      register: tailscale_version
      changed_when: false

    - name: Assert tailscale is installed
      ansible.builtin.assert:
        that:
          - tailscale_version.rc == 0

- name: Set node name
  when: kubernetes_node_name == ""
  ansible.builtin.set_fact:
    kubernetes_node_name: "{{ ansible_facts.hostname }}"

- name: Enable IPv4 forwarding
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: true

- name: Enable IPv6 forwarding
  ansible.posix.sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "1"
    state: present
    reload: true

- name: Enable IPv6 router advertisements
  ansible.posix.sysctl:
    name: net.ipv6.conf.all.accept_ra
    value: "2"
    state: present
    reload: true

- name: Ensure configuration directory
  ansible.builtin.file:
    path: "{{ kubernetes_service_confdir }}/config.yaml.d"
    state: directory
    mode: "0755"

- name: Ensure state directory
  ansible.builtin.file:
    path: "{{ kubernetes_service_statedir }}"
    state: directory
    owner: root
    group: root
    mode: 0644

- name: Configure addons
  when: kubernetes_node_role == "server"
  block:
    - name: Create manifests directory
      ansible.builtin.file:
        path: "{{ kubernetes_service_statedir }}/server/manifests"
        state: directory
        owner: root
        group: root
        mode: 0644

    - name: Disable coredns addon
      when: not kubernetes_addon_coredns_enabled
      ansible.builtin.file:
        path: "{{ kubernetes_service_statedir }}/server/manifests/coredns.yaml.skip"
        state: touch
        owner: root
        group: root
        mode: 0644
        modification_time: preserve
        access_time: preserve

    - name: Disable traefik addon
      when: not kubernetes_addon_traefik_enabled
      ansible.builtin.file:
        path: "{{ kubernetes_service_statedir }}/server/manifests/traefik.yaml.skip"
        state: touch
        owner: root
        group: root
        mode: 0644
        modification_time: preserve
        access_time: preserve

    - name: Disable local-storage addon
      when: not kubernetes_addon_localstorage_enabled
      ansible.builtin.file:
        path: "{{ kubernetes_service_statedir }}/server/manifests/local-storage.yaml.skip"
        state: touch
        owner: root
        group: root
        mode: 0644
        modification_time: preserve
        access_time: preserve
