---
- name: Prerequisite
  ansible.builtin.import_tasks: 000-prerequisite.yml

- name: Kubernetes Cluster Bootstrap
  when: kubernetes_node_role == "server"
  block:
    - name: Register Kubernetes Cluster
      ansible.builtin.include_role:
        name: dnssd
      vars:
        dnssd_provider: porkbun
        dnssd_config:
          domain: "{{ kubernetes_cluster_bootstrap_domain }}"
          record:
            name: "{{ kubernetes_cluster_bootstrap_name }}"
            type: A
            data: "{{ ansible_default_ipv4.address }}"

    - name: Set Kubernetes Cluster Bootstrap Node
      ansible.builtin.set_fact:
        kubernetes_cluster_bootstrap_enabled: "{{ dnssd_status }}"

- name: Download
  ansible.builtin.import_tasks: 010-download.yml

- name: Register node status
  ansible.builtin.stat:
    path: "{{ kubernetes_service_statedir }}/server/node-token"
  register: kubernetes_node_running

- name: Set node status
  ansible.builtin.set_fact:
    kubernetes_node_running: "{{ kubernetes_node_running.stat.exists }}"

- name: Bootstrap cluster
  when: kubernetes_cluster_bootstrap_enabled and not kubernetes_node_running
  ansible.builtin.import_tasks: 020-setup.yml

- name: Wait for cluster to be ready
  ansible.builtin.wait_for:
    host: "{{ lookup('community.general.dig', kubernetes_cluster_apiserver, qtype='A', fail_on_error=true) }}"
    port: 6443
    timeout: 90
    state: started

- name: Setup cluster
  ansible.builtin.import_tasks: 020-setup.yml
